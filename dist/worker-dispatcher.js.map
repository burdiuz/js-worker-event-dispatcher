{"version":3,"file":"worker-dispatcher.js","sources":["../source/WorkerType.js","../node_modules/@actualwave/has-own/has-own.js","../node_modules/@actualwave/event-dispatcher/index.js","../source/WorkerEvent.js","../node_modules/@actualwave/messageport-dispatcher/index.js","../source/AbstractDispatcher.js","../source/DedicatedWorkerDispatcher.js","../source/SharedWorkerDispatcher.js","../source/sharedWorker/ClientDispatcher.js","../source/sharedWorker/ServerDispatcher.js","../source/utils/create.js","../source/index.js"],"sourcesContent":["const WorkerType = {\r\n  DEDICATED_WORKER: 'dedicated',\r\n  SHARED_WORKER: 'shared',\r\n  /**\r\n   * @private\r\n   */\r\n  SHARED_WORKER_SERVER: 'sharedServer',\r\n  /**\r\n   * @private\r\n   */\r\n  SHARED_WORKER_CLIENT: 'sharedClient',\r\n};\r\n\r\nexport default WorkerType;\r\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst hasOwn = (\n  (has) =>\n  (target, property) =>\n  Boolean(target && has.call(target, property))\n)(Object.prototype.hasOwnProperty);\n\nexports.hasOwn = hasOwn;\nexports.default = hasOwn;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar hasOwn = _interopDefault(require('@actualwave/has-own'));\n\n/**\n *      \n */\n\n/* eslint-disable import/prefer-default-export */\nconst isObject = value => typeof value === 'object' && value !== null;\n\n/**\n * Created by Oleg Galaburda on 09.02.16.\n *      \n */\nclass Event {\n  constructor(type, data = null) {\n    this.type = type;\n    this.data = data;\n    this.defaultPrevented = false;\n  }\n\n  toJSON() {\n    return {\n      type: this.type,\n      data: this.data\n    };\n  }\n\n  isDefaultPrevented() {\n    return this.defaultPrevented;\n  }\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n}\nconst getEvent = (eventOrType, optionalData) => {\n  let event = eventOrType;\n\n  if (!isObject(eventOrType)) {\n    event = new Event(String(eventOrType), optionalData);\n  }\n\n  return event;\n};\n\n/**\n * Created by Oleg Galaburda on 09.02.16.\n *      \n */\nclass ListenersRunner {\n  constructor(listeners, onStopped, onComplete) {\n    this.index = -1;\n    this.immediatelyStopped = false;\n\n    this.stopImmediatePropagation = () => {\n      this.immediatelyStopped = true;\n    };\n\n    this.listeners = listeners;\n    this.onStopped = onStopped;\n    this.onComplete = onComplete;\n  }\n\n  run(event, target) {\n    let listener;\n    const {\n      listeners\n    } = this;\n    this.augmentEvent(event); // TODO this has to be handled in separate object ListenersRunner that should be\n    // created for each call() call and asked for index validation on each listener remove.\n\n    for (this.index = 0; this.index < listeners.length; this.index++) {\n      if (this.immediatelyStopped) break;\n      listener = listeners[this.index];\n      listener.call(target, event);\n    }\n\n    this.clearEvent(event);\n    this.onComplete(this);\n  }\n\n  augmentEvent(eventObject) {\n    const event = eventObject;\n    event.stopPropagation = this.onStopped;\n    event.stopImmediatePropagation = this.stopImmediatePropagation;\n  }\n  /* eslint class-methods-use-this: \"off\" */\n\n\n  clearEvent(eventObject) {\n    const event = eventObject;\n    delete event.stopPropagation;\n    delete event.stopImmediatePropagation;\n  }\n\n  listenerRemoved(listeners, index) {\n    if (listeners === this.listeners && index <= this.index) {\n      this.index--;\n    }\n  }\n\n}\n\n/**\n * Created by Oleg Galaburda on 09.02.16.\n *      \n */\nclass EventListeners {\n  constructor() {\n    this._listeners = {};\n    this._runners = [];\n\n    this.removeRunner = runner => {\n      this._runners.splice(this._runners.indexOf(runner), 1);\n    };\n  }\n\n  createList(eventType, priorityOpt) {\n    const priority = parseInt(priorityOpt, 10);\n    const target = this.getPrioritiesByKey(eventType);\n    const key = String(priority);\n    let value;\n\n    if (hasOwn(target, key)) {\n      value = target[key];\n    } else {\n      value = [];\n      target[key] = value;\n    }\n\n    return value;\n  }\n\n  getPrioritiesByKey(key) {\n    let value;\n\n    if (hasOwn(this._listeners, key)) {\n      value = this._listeners[key];\n    } else {\n      value = {};\n      this._listeners[key] = value;\n    }\n\n    return value;\n  }\n\n  add(eventType, handler, priority) {\n    const handlers = this.createList(eventType, priority);\n\n    if (handlers.indexOf(handler) < 0) {\n      handlers.push(handler);\n    }\n  }\n\n  has(eventType) {\n    let priority;\n    let result = false;\n    const priorities = this.getPrioritiesByKey(eventType);\n\n    if (priorities) {\n      for (priority in priorities) {\n        if (hasOwn(priorities, priority)) {\n          result = true;\n          break;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  remove(eventType, handler) {\n    const priorities = this.getPrioritiesByKey(eventType);\n\n    if (priorities) {\n      const list = Object.getOwnPropertyNames(priorities);\n      const {\n        length\n      } = list;\n\n      for (let index = 0; index < length; index++) {\n        const priority = list[index];\n        const handlers = priorities[priority];\n        const handlerIndex = handlers.indexOf(handler);\n\n        if (handlerIndex >= 0) {\n          handlers.splice(handlerIndex, 1);\n\n          if (!handlers.length) {\n            delete priorities[priority];\n          }\n\n          this._runners.forEach(runner => {\n            runner.listenerRemoved(handlers, handlerIndex);\n          });\n        }\n      }\n    }\n  }\n\n  removeAll(eventType) {\n    delete this._listeners[eventType];\n  }\n\n  createRunner(handlers, onStopped) {\n    const runner = new ListenersRunner(handlers, onStopped, this.removeRunner);\n\n    this._runners.push(runner);\n\n    return runner;\n  }\n\n  call(event, target) {\n    const priorities = this.getPrioritiesByKey(event.type);\n    let stopped = false;\n\n    const stopPropagation = () => {\n      stopped = true;\n    };\n\n    if (priorities) {\n      // getOwnPropertyNames() or keys()?\n      const list = Object.getOwnPropertyNames(priorities).sort((a, b) => a - b);\n      const {\n        length\n      } = list;\n\n      for (let index = 0; index < length; index++) {\n        if (stopped) break;\n        const handlers = priorities[list[index]]; // in case if all handlers of priority were removed while event\n        // was dispatched and handlers become undefined.\n\n        if (handlers) {\n          const runner = this.createRunner(handlers, stopPropagation);\n          runner.run(event, target);\n          if (runner.immediatelyStopped) break;\n        }\n      }\n    }\n  }\n\n}\n\n/**\n * Created by Oleg Galaburda on 09.02.16.\n *      \n */\n\nclass EventDispatcher {\n  constructor(eventPreprocessor = null) {\n    this._eventPreprocessor = eventPreprocessor;\n    this._listeners = new EventListeners();\n  }\n\n  addEventListener(eventType, listener, priority = 0) {\n    this._listeners.add(eventType, listener, -priority || 0);\n  }\n\n  hasEventListener(eventType) {\n    return this._listeners.has(eventType);\n  }\n\n  removeEventListener(eventType, listener) {\n    this._listeners.remove(eventType, listener);\n  }\n\n  removeAllEventListeners(eventType) {\n    this._listeners.removeAll(eventType);\n  }\n\n  dispatchEvent(event, data) {\n    let eventObject = getEvent(event, data);\n\n    if (this._eventPreprocessor) {\n      eventObject = this._eventPreprocessor.call(this, eventObject);\n    }\n\n    this._listeners.call(eventObject);\n  }\n\n}\n\nconst createEventDispatcher = eventPreprocessor => new EventDispatcher(eventPreprocessor);\n\nexports.default = EventDispatcher;\nexports.Event = Event;\nexports.EventDispatcher = EventDispatcher;\nexports.createEventDispatcher = createEventDispatcher;\nexports.getEvent = getEvent;\nexports.isObject = isObject;\n//# sourceMappingURL=index.js.map\n","import { Event } from '@actualwave/event-dispatcher';\r\n\r\nexport const NativeEventTypes = {\r\n  CONNECT: 'connect',\r\n  MESSAGE: 'message',\r\n  ERROR: 'error',\r\n  LANGUAGECHANGE: 'languagechange',\r\n  ONLINE: 'online',\r\n  OFFLINE: 'offline',\r\n};\r\n\r\nclass WorkerEvent extends Event {\r\n  static CONNECT = 'worker:connect';\r\n\r\n  static MESSAGE = 'worker:message';\r\n\r\n  static ERROR = 'worker:error';\r\n\r\n  static LANGUAGECHANGE = 'worker:languagechange';\r\n\r\n  static ONLINE = 'worker:online';\r\n\r\n  static OFFLINE = 'worker:offline';\r\n\r\n  constructor(type, data, sourceEvent, client) {\r\n    super(type, data);\r\n    this.sourceEvent = sourceEvent;\r\n    this.client = client;\r\n  }\r\n}\r\n\r\nexport const getWorkerEventType = (type) => {\r\n  switch (type) {\r\n    case NativeEventTypes.CONNECT:\r\n      return WorkerEvent.CONNECT;\r\n    case NativeEventTypes.MESSAGE:\r\n      return WorkerEvent.MESSAGE;\r\n    case NativeEventTypes.ERROR:\r\n      return WorkerEvent.ERROR;\r\n    case NativeEventTypes.LANGUAGECHANGE:\r\n      return WorkerEvent.LANGUAGECHANGE;\r\n    case NativeEventTypes.ONLINE:\r\n      return WorkerEvent.ONLINE;\r\n    case NativeEventTypes.OFFLINE:\r\n      return WorkerEvent.OFFLINE;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const dispatchWorkerEvent = (type, source, target) => {\r\n  const eventType = getWorkerEventType(type);\r\n  const handler = (event) => {\r\n    if (target.hasEventListener(eventType)) {\r\n      target.dispatchEvent(new WorkerEvent(eventType, event, event));\r\n    }\r\n  };\r\n\r\n  source.addEventListener(type, handler);\r\n  return handler;\r\n};\r\n\r\nexport const dispatchWorkerEvents = (source, target) => {\r\n  dispatchWorkerEvent(NativeEventTypes.ERROR, source, target);\r\n  dispatchWorkerEvent(NativeEventTypes.LANGUAGECHANGE, source, target);\r\n  dispatchWorkerEvent(NativeEventTypes.ONLINE, source, target);\r\n  dispatchWorkerEvent(NativeEventTypes.OFFLINE, source, target);\r\n};\r\n\r\nexport const dispatchWorkerErrorEvent = (source, target) => {\r\n  dispatchWorkerEvent(NativeEventTypes.ERROR, source, target);\r\n};\r\n\r\nexport default WorkerEvent;\r\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar eventDispatcher = require('@actualwave/event-dispatcher');\nvar hasOwn = _interopDefault(require('@actualwave/has-own'));\n\n/**\r\n * Created by Oleg Galaburda on 09.02.16.\r\n */\nconst createId = () => `MP/${Math.ceil(Math.random() * 10000)}/${Date.now()}`;\n/**\r\n * If toJSON method implemented on object, it will be called instead of converting to JSON string.\r\n * This was made to utilize structured cloning algorithm for raw objects.\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\r\n * In this case developer is responsible for converting linked objects.\r\n * @param object\r\n * @returns {Object}\r\n */\n\nconst toRawData = object => {\n  if (typeof object.toJSON === 'function') {\n    return object.toJSON();\n  }\n\n  return JSON.stringify(object);\n};\n/**\r\n *\r\n * @param data {Object|String}\r\n * @returns {Object}\r\n */\n\nconst parseRawData = data => {\n  let object; // keep it undefined in case of error\n\n  if (eventDispatcher.isObject(data)) {\n    return data;\n  }\n\n  try {\n    return JSON.parse(data);\n  } catch (error) {// this isn't an event we are waiting for.\n  }\n\n  return object;\n};\n\n/**\r\n * Created by Oleg Galaburda on 09.02.16.\r\n */\nclass MessagePortEvent {\n  constructor(event, dispatcherId) {\n    this.event = event;\n    this.dispatcherId = dispatcherId;\n  }\n\n  toJSON() {\n    return {\n      event: toRawData(this.event),\n      dispatcherId: this.dispatcherId\n    };\n  }\n\n}\nconst isMessagePortEvent = object => eventDispatcher.isObject(object) && hasOwn(object, 'dispatcherId') && hasOwn(object, 'event');\nconst parseMessagePortEvent = object => {\n  const result = parseRawData(object);\n\n  if (result && isMessagePortEvent(result)) {\n    const {\n      event,\n      dispatcherId\n    } = result;\n    return new MessagePortEvent(parseRawData(event), dispatcherId);\n  }\n\n  return null;\n};\n\n/**\r\n * Created by Oleg Galaburda on 09.02.16.\r\n */\nclass MessagePortDispatcher {\n  constructor(target = null, customPostMessageHandler = null, receiverEventPreprocessor = null, senderEventPreprocessor = null) {\n    this.dispatcherId = createId();\n    this.targetOrigin = '*';\n    this.target = target || self;\n    this.customPostMessageHandler = customPostMessageHandler;\n    this.senderEventPreprocessor = senderEventPreprocessor;\n    this.sender = eventDispatcher.createEventDispatcher();\n    this.receiver = eventDispatcher.createEventDispatcher(receiverEventPreprocessor);\n    this.target.addEventListener('message', event => this._postMessageListener(event));\n  }\n\n  addEventListener(eventType, listener, priority) {\n    this.receiver.addEventListener(eventType, listener, priority);\n  }\n\n  hasEventListener(eventType) {\n    return this.receiver.hasEventListener(eventType);\n  }\n\n  removeEventListener(eventType, listener) {\n    this.receiver.removeEventListener(eventType, listener);\n  }\n\n  removeAllEventListeners(eventType) {\n    this.receiver.removeAllEventListeners(eventType);\n  }\n\n  dispatchEvent(eventType, data, transferList) {\n    let event = eventDispatcher.getEvent(eventType, data);\n\n    if (this.senderEventPreprocessor) {\n      event = this.senderEventPreprocessor.call(this, event);\n    }\n\n    const eventJson = toRawData(new MessagePortEvent(event, this.dispatcherId));\n    return this._postMessageHandler(eventJson, transferList);\n  }\n  /**\r\n   * @private\r\n   */\n\n\n  _postMessageHandler(data, transferList) {\n    const handler = this.customPostMessageHandler;\n\n    if (handler) {\n      return handler.call(this, data, this.targetOrigin, transferList);\n    }\n\n    return this.target.postMessage(data, this.targetOrigin, transferList);\n  }\n  /**\r\n   * @private\r\n   */\n\n\n  _postMessageListener(event) {\n    // INFO .nativeEvent react-native thing, it contains event object coming from WebView\n    event = event.nativeEvent || event;\n    const message = parseMessagePortEvent(event.data);\n\n    if (message) {\n      if (message.dispatcherId === this.dispatcherId) {\n        this.sender.dispatchEvent(message.event);\n      } else {\n        this.receiver.dispatchEvent(message.event);\n      }\n    }\n  }\n\n}\nconst createMessagePortDispatcher = (target, customPostMessageHandler, receiverEventPreprocessor, senderEventPreprocessor) => new MessagePortDispatcher(target, customPostMessageHandler, receiverEventPreprocessor, senderEventPreprocessor);\nconst factory = (getTarget, dispatcher = null) => () => {\n  if (!dispatcher) {\n    dispatcher = createMessagePortDispatcher(getTarget());\n  }\n\n  return dispatcher;\n};\nconst getForSelf = factory(() => self);\nconst getForParent = factory(() => parent);\nconst getForTop = factory(() => top);\n\nexports.default = MessagePortDispatcher;\nexports.MessagePortDispatcher = MessagePortDispatcher;\nexports.MessagePortEvent = MessagePortEvent;\nexports.factory = factory;\nexports.getForSelf = getForSelf;\nexports.getForParent = getForParent;\nexports.getForTop = getForTop;\nexports.createMessagePortDispatcher = createMessagePortDispatcher;\n//# sourceMappingURL=index.js.map\n","import MessagePortDispatcher from '@actualwave/messageport-dispatcher';\r\n\r\n/**\r\n *\r\n * @param target {String|Worker}\r\n * @param customPostMessageHandler {?Function}\r\n * @param receiverEventPreprocessor {?Function}\r\n * @param senderEventPreprocessor {?Function}\r\n * @extends MessagePortDispatcher\r\n * @constructor\r\n */\r\nclass AbstractDispatcher extends MessagePortDispatcher {\r\n  constructor(\r\n    type,\r\n    target,\r\n    receiverEventPreprocessor = null,\r\n    senderEventPreprocessor = null,\r\n  ) {\r\n    super(\r\n      target,\r\n      (data, targetOrigin, transferList) => target.postMessage(data, transferList),\r\n      receiverEventPreprocessor,\r\n      senderEventPreprocessor,\r\n    );\r\n\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nexport default AbstractDispatcher;\r\n","import { isObject } from '@actualwave/event-dispatcher';\r\nimport WorkerType from './WorkerType';\r\nimport { dispatchWorkerEvents } from './WorkerEvent';\r\nimport AbstractDispatcher from './AbstractDispatcher';\r\n\r\nconst getTarget = (worker) => {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  let target = worker || self;\r\n\r\n  if (!isObject(target)) {\r\n    target = new Worker(String(worker));\r\n  }\r\n\r\n  return target;\r\n};\r\n\r\n/**\r\n *\r\n * @param target {Worker|String}\r\n * @param receiverEventPreprocessor {?Function}\r\n * @param senderEventPreprocessor {?Function}\r\n * @extends MessagePortDispatcher\r\n * @constructor\r\n */\r\nclass DedicatedWorkerDispatcher extends AbstractDispatcher {\r\n  constructor(worker, receiverEventPreprocessor, senderEventPreprocessor) {\r\n    super(\r\n      WorkerType.DEDICATED_WORKER,\r\n      getTarget(worker),\r\n      receiverEventPreprocessor,\r\n      senderEventPreprocessor,\r\n    );\r\n\r\n    dispatchWorkerEvents(this.target, this.receiver);\r\n  }\r\n\r\n  terminate() {\r\n    return this.target.terminate();\r\n  }\r\n}\r\n\r\nexport default DedicatedWorkerDispatcher;\r\n","import { isObject } from '@actualwave/event-dispatcher';\r\nimport WorkerType from './WorkerType';\r\nimport { dispatchWorkerErrorEvent } from './WorkerEvent';\r\nimport AbstractDispatcher from './AbstractDispatcher';\r\n\r\nconst getTarget = (target, name) => {\r\n  if (!isObject(target)) {\r\n    return new SharedWorker(String(target), name);\r\n  }\r\n\r\n  return target;\r\n};\r\n\r\n/**\r\n *\r\n * @param worker {SharedWorker}\r\n * @param name {String}\r\n * @param receiverEventPreprocessor {?Function}\r\n * @param senderEventPreprocessor {?Function}\r\n * @extends WorkerMessenger\r\n * @constructor\r\n */\r\nclass SharedWorkerDispatcher extends AbstractDispatcher {\r\n  constructor(target, name, receiverEventPreprocessor, senderEventPreprocessor) {\r\n    const worker = getTarget(target, name);\r\n\r\n    super(WorkerType.SHARED_WORKER, worker.port, receiverEventPreprocessor, senderEventPreprocessor);\r\n\r\n    this.worker = worker;\r\n\r\n    dispatchWorkerErrorEvent(this.worker, this.receiver);\r\n  }\r\n\r\n  start() {\r\n    this.target.start();\r\n  }\r\n\r\n  close() {\r\n    this.target.close();\r\n  }\r\n}\r\n\r\nexport default SharedWorkerDispatcher;\r\n","import WorkerType from '../WorkerType';\r\nimport AbstractDispatcher from '../AbstractDispatcher';\r\n\r\n/**\r\n * @param target {MessagePort}\r\n * @param receiverEventPreprocessor {?Function}\r\n * @param senderEventPreprocessor {?Function}\r\n * @extends MessagePortDispatcher\r\n * @constructor\r\n */\r\nclass ClientDispatcher extends AbstractDispatcher {\r\n  constructor(target, receiverEventPreprocessor, senderEventPreprocessor) {\r\n    super(WorkerType.SHARED_WORKER_CLIENT, target, receiverEventPreprocessor, senderEventPreprocessor);\r\n  }\r\n\r\n  start() {\r\n    this.target.start();\r\n  }\r\n\r\n  close() {\r\n    this.target.close();\r\n  }\r\n}\r\n\r\nexport default ClientDispatcher;\r\n","import { createEventDispatcher } from '@actualwave/event-dispatcher';\r\nimport WorkerType from '../WorkerType';\r\nimport WorkerEvent, { dispatchWorkerEvents } from '../WorkerEvent';\r\nimport ClientDispatcher from './ClientDispatcher';\r\n\r\n/**\r\n * Read-only interface, mainly will listen to \"connect\" event.\r\n * You should listen to WorkerEvent.CONNECT to intercept client\r\n * instance to be able to communicate.\r\n * @param worker\r\n * @param receiverEventPreprocessor {?Function}\r\n * @constructor\r\n */\r\nclass ServerDispatcher {\r\n  constructor(\r\n    target = self, // eslint-disable-line no-restricted-globals\r\n    receiverEventPreprocessor,\r\n    clientReceiverEventPreprocessor,\r\n    clientSenderEventPreprocessor,\r\n  ) {\r\n    this.type = WorkerType.SHARED_WORKER_SERVER;\r\n    this.target = target;\r\n    this.clientFactory = (client) => new ClientDispatcher(client, clientReceiverEventPreprocessor, clientSenderEventPreprocessor);\r\n    this.receiver = createEventDispatcher(receiverEventPreprocessor);\r\n    this.target.addEventListener('connect', this.handleConnect);\r\n    dispatchWorkerEvents(this.target, this.receiver);\r\n  }\r\n\r\n  addEventListener = (...args) => this.receiver.addEventListener(...args);\r\n\r\n  hasEventListener = (...args) => this.receiver.hasEventListener(...args);\r\n\r\n  removeEventListener = (...args) => this.receiver.removeEventListener(...args);\r\n\r\n  removeAllEventListeners = (...args) => this.receiver.removeAllEventListeners(...args);\r\n\r\n  handleConnect = (event) => {\r\n    const [target] = event.ports;\r\n    const client = this.clientFactory(target);\r\n\r\n    this.receiver.dispatchEvent(new WorkerEvent(WorkerEvent.CONNECT, client, event, client));\r\n  };\r\n}\r\n\r\nexport default ServerDispatcher;\r\n","import WorkerType from '../WorkerType';\r\nimport DedicatedWorkerDispatcher from '../DedicatedWorkerDispatcher';\r\nimport SharedWorkerDispatcher from '../SharedWorkerDispatcher';\r\nimport ClientDispatcher from '../sharedWorker/ClientDispatcher';\r\nimport ServerDispatcher from '../sharedWorker/ServerDispatcher';\r\n\r\n/**\r\n *\r\n * @param worker {String|Worker|SharedWorker|MessagePort}\r\n * @param type {String}\r\n * @param receiverEventPreprocessor {?Function}\r\n * @param senderEventPreprocessor {?Function}\r\n * @returns {AbstractDispatcher}\r\n */\r\nexport const create = (target, type, receiverEventPreprocessor, senderEventPreprocessor) => {\r\n  let dispatcher = null;\r\n  switch (type) {\r\n    default:\r\n    case WorkerType.DEDICATED_WORKER:\r\n      dispatcher = new DedicatedWorkerDispatcher(\r\n        target,\r\n        receiverEventPreprocessor,\r\n        senderEventPreprocessor,\r\n      );\r\n      break;\r\n    case WorkerType.SHARED_WORKER:\r\n      dispatcher = new SharedWorkerDispatcher(\r\n        target,\r\n        null,\r\n        receiverEventPreprocessor,\r\n        senderEventPreprocessor,\r\n      );\r\n      break;\r\n    case WorkerType.SHARED_WORKER_SERVER:\r\n      dispatcher = new ServerDispatcher(\r\n        target,\r\n        receiverEventPreprocessor,\r\n      );\r\n      break;\r\n    case WorkerType.SHARED_WORKER_CLIENT:\r\n      dispatcher = new ClientDispatcher(\r\n        target,\r\n        receiverEventPreprocessor,\r\n        senderEventPreprocessor,\r\n      );\r\n      break;\r\n  }\r\n  return dispatcher;\r\n};\r\n\r\n/**\r\n *\r\n * @param receiverEventPreprocessor {?Function}\r\n * @param senderEventPreprocessor {?Function}\r\n * @returns {AbstractDispatcher}\r\n */\r\nexport const createForSelf = (receiverEventPreprocessor, senderEventPreprocessor) => {\r\n  /* eslint-disable no-restricted-globals */\r\n  let dispatcher = null;\r\n  if (typeof (self.postMessage) === 'function') {\r\n    dispatcher = new DedicatedWorkerDispatcher(\r\n      self,\r\n      receiverEventPreprocessor,\r\n      senderEventPreprocessor,\r\n    );\r\n  } else {\r\n    dispatcher = new ServerDispatcher(\r\n      self,\r\n      receiverEventPreprocessor,\r\n    );\r\n  }\r\n  return dispatcher;\r\n  /* eslint-enable no-restricted-globals */\r\n};\r\n","import WorkerType from './WorkerType';\r\nimport WorkerEvent from './WorkerEvent';\r\nimport DedicatedWorkerDispatcher from './DedicatedWorkerDispatcher';\r\nimport SharedWorkerDispatcher from './SharedWorkerDispatcher';\r\nimport ClientDispatcher from './sharedWorker/ClientDispatcher';\r\nimport ServerDispatcher from './sharedWorker/ServerDispatcher';\r\nimport { create, createForSelf } from './utils/create';\r\n\r\n\r\nconst CONNECT_EVENT = WorkerEvent.CONNECT;\r\nconst { DEDICATED_WORKER } = WorkerType;\r\nconst { SHARED_WORKER } = WorkerType;\r\n\r\nexport default DedicatedWorkerDispatcher;\r\n\r\nexport {\r\n  create,\r\n  createForSelf,\r\n  CONNECT_EVENT,\r\n  DEDICATED_WORKER,\r\n  SHARED_WORKER,\r\n  WorkerEvent,\r\n  WorkerType,\r\n  ClientDispatcher,\r\n  ServerDispatcher,\r\n  SharedWorkerDispatcher,\r\n  DedicatedWorkerDispatcher,\r\n};\r\n"],"names":["WorkerType","DEDICATED_WORKER","SHARED_WORKER","SHARED_WORKER_SERVER","SHARED_WORKER_CLIENT","require$$0","NativeEventTypes","CONNECT","MESSAGE","ERROR","LANGUAGECHANGE","ONLINE","OFFLINE","WorkerEvent","Event","constructor","type","data","sourceEvent","client","getWorkerEventType","dispatchWorkerEvent","source","target","eventType","handler","event","hasEventListener","dispatchEvent","addEventListener","dispatchWorkerEvents","dispatchWorkerErrorEvent","AbstractDispatcher","MessagePortDispatcher","receiverEventPreprocessor","senderEventPreprocessor","targetOrigin","transferList","postMessage","getTarget","worker","self","isObject","Worker","String","DedicatedWorkerDispatcher","receiver","terminate","name","SharedWorker","SharedWorkerDispatcher","port","start","close","ClientDispatcher","ServerDispatcher","clientReceiverEventPreprocessor","clientSenderEventPreprocessor","clientFactory","createEventDispatcher","handleConnect","args","removeEventListener","removeAllEventListeners","ports","create","dispatcher","createForSelf","CONNECT_EVENT"],"mappings":"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"}