{"version":3,"file":"worker-dispatcher.js","sources":["../source/WorkerType.js","../node_modules/@actualwave/has-own/has-own.js","../node_modules/@actualwave/event-dispatcher/index.js","../source/WorkerEvent.js","../node_modules/@actualwave/messageport-dispatcher/index.js","../source/AbstractDispatcher.js","../source/DedicatedWorkerDispatcher.js","../source/SharedWorkerDispatcher.js","../source/sharedWorker/ClientDispatcher.js","../source/sharedWorker/ServerDispatcher.js","../source/ServiceWorkerDispatcher.js","../source/serviceWorker/ClientDispatcher.js","../source/serviceWorker/ServerDispatcher.js","../source/utils/create.js","../source/index.js"],"sourcesContent":["const WorkerType = {\n  DEDICATED_WORKER: 'dedicated',\n\n  SHARED_WORKER: 'shared',\n  /**\n   * @private\n   */\n  SHARED_WORKER_SERVER: 'sharedServer',\n  /**\n   * @private\n   */\n  SHARED_WORKER_CLIENT: 'sharedClient',\n\n  SERVICE_WORKER: 'service',\n  /**\n   * @private\n   */\n  SERVICE_WORKER_SERVER: 'serviceServer',\n  /**\n   * @private\n   */\n  SERVICE_WORKER_CLIENT: 'serviceClient',\n};\n\nexport default WorkerType;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst hasOwn = (\n  (has) =>\n  (target, property) =>\n  Boolean(target && has.call(target, property))\n)(Object.prototype.hasOwnProperty);\n\nexports.hasOwn = hasOwn;\nexports.default = hasOwn;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar hasOwn = _interopDefault(require('@actualwave/has-own'));\n\n/**\n *      \n */\n\n/* eslint-disable import/prefer-default-export */\nconst isObject = value => typeof value === 'object' && value !== null;\n\n/**\n * Created by Oleg Galaburda on 09.02.16.\n *      \n */\nclass Event {\n  constructor(type, data = null) {\n    this.type = type;\n    this.data = data;\n    this.defaultPrevented = false;\n  }\n\n  toJSON() {\n    return {\n      type: this.type,\n      data: this.data\n    };\n  }\n\n  isDefaultPrevented() {\n    return this.defaultPrevented;\n  }\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n}\nconst getEvent = (eventOrType, optionalData) => {\n  let event = eventOrType;\n\n  if (!isObject(eventOrType)) {\n    event = new Event(String(eventOrType), optionalData);\n  }\n\n  return event;\n};\n\n/**\n * Created by Oleg Galaburda on 09.02.16.\n *      \n */\nclass ListenersRunner {\n  constructor(listeners, onStopped, onComplete) {\n    this.index = -1;\n    this.immediatelyStopped = false;\n\n    this.stopImmediatePropagation = () => {\n      this.immediatelyStopped = true;\n    };\n\n    this.listeners = listeners;\n    this.onStopped = onStopped;\n    this.onComplete = onComplete;\n  }\n\n  run(event, target) {\n    let listener;\n    const {\n      listeners\n    } = this;\n    this.augmentEvent(event); // TODO this has to be handled in separate object ListenersRunner that should be\n    // created for each call() call and asked for index validation on each listener remove.\n\n    for (this.index = 0; this.index < listeners.length; this.index++) {\n      if (this.immediatelyStopped) break;\n      listener = listeners[this.index];\n      listener.call(target, event);\n    }\n\n    this.clearEvent(event);\n    this.onComplete(this);\n  }\n\n  augmentEvent(eventObject) {\n    const event = eventObject;\n    event.stopPropagation = this.onStopped;\n    event.stopImmediatePropagation = this.stopImmediatePropagation;\n  }\n  /* eslint class-methods-use-this: \"off\" */\n\n\n  clearEvent(eventObject) {\n    const event = eventObject;\n    delete event.stopPropagation;\n    delete event.stopImmediatePropagation;\n  }\n\n  listenerRemoved(listeners, index) {\n    if (listeners === this.listeners && index <= this.index) {\n      this.index--;\n    }\n  }\n\n}\n\n/**\n * Created by Oleg Galaburda on 09.02.16.\n *      \n */\nclass EventListeners {\n  constructor() {\n    this._listeners = {};\n    this._runners = [];\n\n    this.removeRunner = runner => {\n      this._runners.splice(this._runners.indexOf(runner), 1);\n    };\n  }\n\n  createList(eventType, priorityOpt) {\n    const priority = parseInt(priorityOpt, 10);\n    const target = this.getPrioritiesByKey(eventType);\n    const key = String(priority);\n    let value;\n\n    if (hasOwn(target, key)) {\n      value = target[key];\n    } else {\n      value = [];\n      target[key] = value;\n    }\n\n    return value;\n  }\n\n  getPrioritiesByKey(key) {\n    let value;\n\n    if (hasOwn(this._listeners, key)) {\n      value = this._listeners[key];\n    } else {\n      value = {};\n      this._listeners[key] = value;\n    }\n\n    return value;\n  }\n\n  add(eventType, handler, priority) {\n    const handlers = this.createList(eventType, priority);\n\n    if (handlers.indexOf(handler) < 0) {\n      handlers.push(handler);\n    }\n  }\n\n  has(eventType) {\n    let priority;\n    let result = false;\n    const priorities = this.getPrioritiesByKey(eventType);\n\n    if (priorities) {\n      for (priority in priorities) {\n        if (hasOwn(priorities, priority)) {\n          result = true;\n          break;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  remove(eventType, handler) {\n    const priorities = this.getPrioritiesByKey(eventType);\n\n    if (priorities) {\n      const list = Object.getOwnPropertyNames(priorities);\n      const {\n        length\n      } = list;\n\n      for (let index = 0; index < length; index++) {\n        const priority = list[index];\n        const handlers = priorities[priority];\n        const handlerIndex = handlers.indexOf(handler);\n\n        if (handlerIndex >= 0) {\n          handlers.splice(handlerIndex, 1);\n\n          if (!handlers.length) {\n            delete priorities[priority];\n          }\n\n          this._runners.forEach(runner => {\n            runner.listenerRemoved(handlers, handlerIndex);\n          });\n        }\n      }\n    }\n  }\n\n  removeAll(eventType) {\n    delete this._listeners[eventType];\n  }\n\n  createRunner(handlers, onStopped) {\n    const runner = new ListenersRunner(handlers, onStopped, this.removeRunner);\n\n    this._runners.push(runner);\n\n    return runner;\n  }\n\n  call(event, target) {\n    const priorities = this.getPrioritiesByKey(event.type);\n    let stopped = false;\n\n    const stopPropagation = () => {\n      stopped = true;\n    };\n\n    if (priorities) {\n      // getOwnPropertyNames() or keys()?\n      const list = Object.getOwnPropertyNames(priorities).sort((a, b) => a - b);\n      const {\n        length\n      } = list;\n\n      for (let index = 0; index < length; index++) {\n        if (stopped) break;\n        const handlers = priorities[list[index]]; // in case if all handlers of priority were removed while event\n        // was dispatched and handlers become undefined.\n\n        if (handlers) {\n          const runner = this.createRunner(handlers, stopPropagation);\n          runner.run(event, target);\n          if (runner.immediatelyStopped) break;\n        }\n      }\n    }\n  }\n\n}\n\n/**\n * Created by Oleg Galaburda on 09.02.16.\n *      \n */\n\nclass EventDispatcher {\n  constructor(eventPreprocessor = null) {\n    this._eventPreprocessor = eventPreprocessor;\n    this._listeners = new EventListeners();\n  }\n\n  addEventListener(eventType, listener, priority = 0) {\n    this._listeners.add(eventType, listener, -priority || 0);\n  }\n\n  hasEventListener(eventType) {\n    return this._listeners.has(eventType);\n  }\n\n  removeEventListener(eventType, listener) {\n    this._listeners.remove(eventType, listener);\n  }\n\n  removeAllEventListeners(eventType) {\n    this._listeners.removeAll(eventType);\n  }\n\n  dispatchEvent(event, data) {\n    let eventObject = getEvent(event, data);\n\n    if (this._eventPreprocessor) {\n      eventObject = this._eventPreprocessor.call(this, eventObject);\n    }\n\n    this._listeners.call(eventObject);\n  }\n\n}\n\nconst createEventDispatcher = eventPreprocessor => new EventDispatcher(eventPreprocessor);\n\nexports.default = EventDispatcher;\nexports.Event = Event;\nexports.EventDispatcher = EventDispatcher;\nexports.createEventDispatcher = createEventDispatcher;\nexports.getEvent = getEvent;\nexports.isObject = isObject;\n//# sourceMappingURL=index.js.map\n","import { Event } from '@actualwave/event-dispatcher';\n\nexport const NativeEventType = {\n  CONNECT: 'connect',\n  MESSAGE: 'message',\n  ERROR: 'error',\n  MESSAGEERROR: 'messageerror',\n  LANGUAGECHANGE: 'languagechange',\n  ONLINE: 'online',\n  OFFLINE: 'offline',\n\n  /* Service Worker specific events */\n  INSTALL: 'install',\n  ACTIVATE: 'activate',\n  FETCH: 'fetch',\n  SYNC: 'sync',\n  PUSH: 'push',\n};\n\nclass WorkerEvent extends Event {\n  static CONNECT = 'worker:connect';\n\n  static MESSAGE = 'worker:message';\n\n  static ERROR = 'worker:error';\n\n  static MESSAGEERROR = 'messageerror';\n\n  static LANGUAGECHANGE = 'worker:languagechange';\n\n  static ONLINE = 'worker:online';\n\n  static OFFLINE = 'worker:offline';\n\n  /* Service Worker specific events */\n\n  static INSTALL: 'worker:install';\n\n  static ACTIVATE: 'worker:activate';\n\n  static FETCH: 'worker:fetch';\n\n  static SYNC: 'worker:sync';\n\n  static PUSH: 'worker:push';\n\n  constructor(type, data, nativeEvent, client) {\n    super(type, data);\n    this.nativeEvent = nativeEvent;\n    this.client = client;\n  }\n}\n\nexport const getWorkerEventType = (type) => {\n  switch (type) {\n    case NativeEventType.CONNECT:\n      return WorkerEvent.CONNECT;\n    case NativeEventType.MESSAGE:\n      return WorkerEvent.MESSAGE;\n    case NativeEventType.ERROR:\n      return WorkerEvent.ERROR;\n    case NativeEventType.MESSAGEERROR:\n      return WorkerEvent.MESSAGEERROR;\n    case NativeEventType.LANGUAGECHANGE:\n      return WorkerEvent.LANGUAGECHANGE;\n    case NativeEventType.ONLINE:\n      return WorkerEvent.ONLINE;\n    case NativeEventType.OFFLINE:\n      return WorkerEvent.OFFLINE;\n\n    /* Service Worker specific events */\n    case NativeEventType.INSTALL:\n      return WorkerEvent.INSTALL;\n    case NativeEventType.ACTIVATE:\n      return WorkerEvent.ACTIVATE;\n    case NativeEventType.FETCH:\n      return WorkerEvent.FETCH;\n    case NativeEventType.SYNC:\n      return WorkerEvent.SYNC;\n    case NativeEventType.PUSH:\n      return WorkerEvent.PUSH;\n    default:\n      return type;\n  }\n};\n\nexport const dispatchWorkerEvent = (type, source, target) => {\n  const eventType = getWorkerEventType(type);\n\n  const handler = (event) => {\n    if (target.hasEventListener(eventType)) {\n      target.dispatchEvent(new WorkerEvent(eventType, event, event));\n    }\n  };\n\n  source.addEventListener(type, handler);\n  return handler;\n};\n\nexport const dispatchWorkerEvents = (source, target) => {\n  dispatchWorkerEvent(NativeEventType.ERROR, source, target);\n  dispatchWorkerEvent(NativeEventType.LANGUAGECHANGE, source, target);\n  dispatchWorkerEvent(NativeEventType.ONLINE, source, target);\n  dispatchWorkerEvent(NativeEventType.OFFLINE, source, target);\n};\n\nexport const dispatchServiceWorkerEvents = (source, target) => {\n  dispatchWorkerEvent(NativeEventType.INSTALL, source, target);\n  dispatchWorkerEvent(NativeEventType.ACTIVATE, source, target);\n  dispatchWorkerEvent(NativeEventType.FETCH, source, target);\n  dispatchWorkerEvent(NativeEventType.SYNC, source, target);\n  dispatchWorkerEvent(NativeEventType.PUSH, source, target);\n};\n\nexport const dispatchWorkerErrorEvent = (source, target) => {\n  dispatchWorkerEvent(NativeEventType.ERROR, source, target);\n  dispatchWorkerEvent(NativeEventType.MESSAGEERROR, source, target);\n};\n\nexport default WorkerEvent;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar eventDispatcher = require('@actualwave/event-dispatcher');\nvar hasOwn = _interopDefault(require('@actualwave/has-own'));\n\n/**\n * Created by Oleg Galaburda on 09.02.16.\n */\nconst createId = () => `MP/${Math.ceil(Math.random() * 10000)}/${Date.now()}`;\n/**\n * If toJSON method implemented on object, it will be called instead of converting to JSON string.\n * This was made to utilize structured cloning algorithm for raw objects.\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n * In this case developer is responsible for converting linked objects.\n * @param object\n * @returns {Object}\n */\n\nconst toRawData = object => {\n  if (typeof object.toJSON === 'function') {\n    return object.toJSON();\n  }\n\n  return JSON.stringify(object);\n};\n/**\n *\n * @param data {Object|String}\n * @returns {Object}\n */\n\nconst parseRawData = data => {\n  let object; // keep it undefined in case of error\n\n  if (eventDispatcher.isObject(data)) {\n    return data;\n  }\n\n  try {\n    return JSON.parse(data);\n  } catch (error) {// this isn't an event we are waiting for.\n  }\n\n  return object;\n};\n\n/**\n * Created by Oleg Galaburda on 09.02.16.\n */\nclass MessagePortEvent {\n  constructor(event, dispatcherId) {\n    this.event = event;\n    this.dispatcherId = dispatcherId;\n  }\n\n  toJSON() {\n    return {\n      event: toRawData(this.event),\n      dispatcherId: this.dispatcherId\n    };\n  }\n\n}\nconst isMessagePortEvent = object => eventDispatcher.isObject(object) && hasOwn(object, 'dispatcherId') && hasOwn(object, 'event');\nconst parseMessagePortEvent = object => {\n  const result = parseRawData(object);\n\n  if (result && isMessagePortEvent(result)) {\n    const {\n      event,\n      dispatcherId\n    } = result;\n    return new MessagePortEvent(parseRawData(event), dispatcherId);\n  }\n\n  return null;\n};\n\n/**\n * Created by Oleg Galaburda on 09.02.16.\n */\nclass MessagePortDispatcher {\n  constructor(target = null, customPostMessageHandler = null, receiverEventPreprocessor = null, senderEventPreprocessor = null) {\n    this.dispatcherId = createId();\n    this.targetOrigin = '*';\n    this.target = target || self;\n    this.customPostMessageHandler = customPostMessageHandler;\n    this.senderEventPreprocessor = senderEventPreprocessor;\n    this.sender = eventDispatcher.createEventDispatcher();\n    this.receiver = eventDispatcher.createEventDispatcher(receiverEventPreprocessor);\n    this.target.addEventListener('message', event => this._postMessageListener(event));\n  }\n\n  addEventListener(eventType, listener, priority) {\n    this.receiver.addEventListener(eventType, listener, priority);\n  }\n\n  hasEventListener(eventType) {\n    return this.receiver.hasEventListener(eventType);\n  }\n\n  removeEventListener(eventType, listener) {\n    this.receiver.removeEventListener(eventType, listener);\n  }\n\n  removeAllEventListeners(eventType) {\n    this.receiver.removeAllEventListeners(eventType);\n  }\n\n  dispatchEvent(eventType, data, transferList) {\n    let event = eventDispatcher.getEvent(eventType, data);\n\n    if (this.senderEventPreprocessor) {\n      event = this.senderEventPreprocessor.call(this, event);\n    }\n\n    const eventJson = toRawData(new MessagePortEvent(event, this.dispatcherId));\n    return this._postMessageHandler(eventJson, transferList);\n  }\n  /**\n   * @private\n   */\n\n\n  _postMessageHandler(data, transferList) {\n    const handler = this.customPostMessageHandler;\n\n    if (handler) {\n      return handler.call(this, data, this.targetOrigin, transferList);\n    }\n\n    return this.target.postMessage(data, this.targetOrigin, transferList);\n  }\n  /**\n   * @private\n   */\n\n\n  _postMessageListener(event) {\n    // INFO .nativeEvent react-native thing, it contains event object coming from WebView\n    event = event.nativeEvent || event;\n    const message = parseMessagePortEvent(event.data);\n\n    if (message) {\n      if (message.dispatcherId === this.dispatcherId) {\n        this.sender.dispatchEvent(message.event);\n      } else {\n        this.receiver.dispatchEvent(message.event);\n      }\n    }\n  }\n\n}\nconst createMessagePortDispatcher = (target, customPostMessageHandler, receiverEventPreprocessor, senderEventPreprocessor) => new MessagePortDispatcher(target, customPostMessageHandler, receiverEventPreprocessor, senderEventPreprocessor);\nconst factory = (getTarget, dispatcher = null) => () => {\n  if (!dispatcher) {\n    dispatcher = createMessagePortDispatcher(getTarget());\n  }\n\n  return dispatcher;\n};\nconst getForSelf = factory(() => self);\nconst getForParent = factory(() => parent);\nconst getForTop = factory(() => top);\n\nexports.MessagePortDispatcher = MessagePortDispatcher;\nexports.MessagePortEvent = MessagePortEvent;\nexports.createMessagePortDispatcher = createMessagePortDispatcher;\nexports.default = MessagePortDispatcher;\nexports.factory = factory;\nexports.getForParent = getForParent;\nexports.getForSelf = getForSelf;\nexports.getForTop = getForTop;\nexports.isMessagePortEvent = isMessagePortEvent;\nexports.parseMessagePortEvent = parseMessagePortEvent;\n//# sourceMappingURL=index.js.map\n","import MessagePortDispatcher from '@actualwave/messageport-dispatcher';\n\n/**\n *\n * @param target {String|Worker}\n * @param customPostMessageHandler {?Function}\n * @param receiverEventPreprocessor {?Function}\n * @param senderEventPreprocessor {?Function}\n * @extends MessagePortDispatcher\n * @constructor\n */\nclass AbstractDispatcher extends MessagePortDispatcher {\n  constructor(\n    type,\n    target,\n    receiverEventPreprocessor = null,\n    senderEventPreprocessor = null,\n  ) {\n    super(\n      target,\n      (data, targetOrigin, transferList) => target.postMessage(data, transferList),\n      receiverEventPreprocessor,\n      senderEventPreprocessor,\n    );\n\n    this.type = type;\n  }\n}\n\nexport default AbstractDispatcher;\n","import { isObject } from '@actualwave/event-dispatcher';\nimport WorkerType from './WorkerType';\nimport { dispatchWorkerEvents } from './WorkerEvent';\nimport AbstractDispatcher from './AbstractDispatcher';\n\nconst getTarget = (worker) => {\n  // eslint-disable-next-line no-restricted-globals\n  let target = worker || self;\n\n  if (!isObject(target)) {\n    target = new Worker(String(worker));\n  }\n\n  return target;\n};\n\n/**\n *\n * @param target {Worker|String}\n * @param receiverEventPreprocessor {?Function}\n * @param senderEventPreprocessor {?Function}\n * @extends MessagePortDispatcher\n * @constructor\n */\nclass DedicatedWorkerDispatcher extends AbstractDispatcher {\n  constructor(worker, receiverEventPreprocessor, senderEventPreprocessor) {\n    super(\n      WorkerType.DEDICATED_WORKER,\n      getTarget(worker),\n      receiverEventPreprocessor,\n      senderEventPreprocessor,\n    );\n\n    dispatchWorkerEvents(this.target, this.receiver);\n  }\n\n  terminate() {\n    return this.target.terminate();\n  }\n}\n\nexport default DedicatedWorkerDispatcher;\n","import { isObject } from '@actualwave/event-dispatcher';\nimport WorkerType from './WorkerType';\nimport { dispatchWorkerErrorEvent } from './WorkerEvent';\nimport AbstractDispatcher from './AbstractDispatcher';\n\nconst getTarget = (target, name) => {\n  if (!isObject(target)) {\n    return new SharedWorker(String(target), name);\n  }\n\n  return target;\n};\n\n/**\n *\n * @param worker {SharedWorker}\n * @param name {String}\n * @param receiverEventPreprocessor {?Function}\n * @param senderEventPreprocessor {?Function}\n * @extends WorkerMessenger\n * @constructor\n */\nclass SharedWorkerDispatcher extends AbstractDispatcher {\n  constructor(\n    target,\n    name,\n    receiverEventPreprocessor,\n    senderEventPreprocessor,\n  ) {\n    const worker = getTarget(target, name);\n\n    super(\n      WorkerType.SHARED_WORKER,\n      worker.port,\n      receiverEventPreprocessor,\n      senderEventPreprocessor,\n    );\n\n    this.worker = worker;\n\n    dispatchWorkerErrorEvent(this.worker, this.receiver);\n\n    this.start();\n  }\n\n  start() {\n    this.target.start();\n  }\n\n  close() {\n    this.target.close();\n  }\n}\n\nexport default SharedWorkerDispatcher;\n","import WorkerType from '../WorkerType';\nimport AbstractDispatcher from '../AbstractDispatcher';\n\n/**\n * @param target {MessagePort}\n * @param receiverEventPreprocessor {?Function}\n * @param senderEventPreprocessor {?Function}\n * @extends MessagePortDispatcher\n * @constructor\n */\nclass SharedClientDispatcher extends AbstractDispatcher {\n  constructor(target, receiverEventPreprocessor, senderEventPreprocessor) {\n    super(\n      WorkerType.SHARED_WORKER_CLIENT,\n      target,\n      receiverEventPreprocessor,\n      senderEventPreprocessor,\n    );\n  }\n\n  start() {\n    this.target.start();\n  }\n\n  close() {\n    this.target.close();\n  }\n}\n\nexport default SharedClientDispatcher;\n","/* eslint-disable no-restricted-globals */\nimport { createEventDispatcher } from '@actualwave/event-dispatcher';\nimport WorkerType from '../WorkerType';\nimport WorkerEvent, {\n  NativeEventType,\n  dispatchWorkerEvents,\n} from '../WorkerEvent';\nimport SharedClientDispatcher from './ClientDispatcher';\n\n/**\n * Read-only interface, mainly will listen to \"connect\" event.\n * You should listen to WorkerEvent.CONNECT to intercept client\n * instance to be able to communicate.\n * @param worker\n * @param receiverEventPreprocessor {?Function}\n * @constructor\n */\nclass SharedServerDispatcher {\n  constructor(\n    target = self,\n    receiverEventPreprocessor,\n    clientReceiverEventPreprocessor,\n    clientSenderEventPreprocessor,\n  ) {\n    this.type = WorkerType.SHARED_WORKER_SERVER;\n    this.target = target;\n    this.clientFactory = (client) => new SharedClientDispatcher(\n      client,\n      clientReceiverEventPreprocessor,\n      clientSenderEventPreprocessor,\n    );\n    this.receiver = createEventDispatcher(receiverEventPreprocessor);\n    this.target.addEventListener(NativeEventType.CONNECT, this.handleConnect);\n    dispatchWorkerEvents(this.target, this.receiver);\n  }\n\n  addEventListener = (...args) => this.receiver.addEventListener(...args);\n\n  hasEventListener = (...args) => this.receiver.hasEventListener(...args);\n\n  removeEventListener = (...args) => this.receiver.removeEventListener(...args);\n\n  removeAllEventListeners = (...args) => this.receiver.removeAllEventListeners(...args);\n\n  handleConnect = (event) => {\n    const [target] = event.ports;\n    const client = this.clientFactory(target);\n\n    this.receiver.dispatchEvent(\n      new WorkerEvent(WorkerEvent.CONNECT, client, event, client),\n    );\n  };\n}\n\nexport default SharedServerDispatcher;\n","/* eslint-disable class-methods-use-this */\nimport WorkerType from './WorkerType';\nimport { dispatchWorkerErrorEvent } from './WorkerEvent';\nimport AbstractDispatcher from './AbstractDispatcher';\n\nconst getServiceWorker = async () => {\n  await navigator.serviceWorker.ready;\n  const registration = await navigator.serviceWorker.getRegistration();\n\n  return registration.active;\n};\n\nconst createTarget = () => {\n  const channel = new MessageChannel();\n  let neutered = false;\n\n  return {\n    postMessage: async (message) => {\n      const worker = await getServiceWorker();\n\n      if(neutered) {\n        return worker.postMessage(message);\n      }\n\n      neutered = true;\n      \n      return worker.postMessage(message, [channel.port2]);\n    },\n    get onmessage() {\n      return channel.port1.onmessage;\n    },\n    set onmessage(handler) {\n      channel.port1.onmessage = handler;\n    },\n    start: () => {\n      channel.port1.start();\n    },\n    close: () => {\n      channel.port1.close();\n    },\n    addEventListener: (...args) => channel.port1.addEventListener(...args),\n  };\n};\n\n/**\n *\n * @param receiverEventPreprocessor {?Function}\n * @param senderEventPreprocessor {?Function}\n * @extends WorkerMessenger\n * @constructor\n */\nclass ServiceWorkerDispatcher extends AbstractDispatcher {\n  constructor(receiverEventPreprocessor, senderEventPreprocessor) {\n    super(\n      WorkerType.SERVICE_WORKER,\n      createTarget(),\n      receiverEventPreprocessor,\n      senderEventPreprocessor,\n    );\n\n    this.start();\n\n    dispatchWorkerErrorEvent(this.target, this.receiver);\n  }\n\n  start() {\n    return this.target.start();\n  }\n\n  close() {\n    return this.target.close();\n  }\n\n  onReady(handler) {\n    return navigator.serviceWorker.ready.then(handler);\n  }\n\n  get ready() {\n    return navigator.serviceWorker.ready;\n  }\n}\n\nexport default ServiceWorkerDispatcher;\n","import WorkerType from '../WorkerType';\nimport AbstractDispatcher from '../AbstractDispatcher';\n\n/**\n * @param target {MessagePort}\n * @param receiverEventPreprocessor {?Function}\n * @param senderEventPreprocessor {?Function}\n * @extends MessagePortDispatcher\n * @constructor\n */\nclass ServiceClientDispatcher extends AbstractDispatcher {\n  constructor(target, receiverEventPreprocessor, senderEventPreprocessor) {\n    super(\n      WorkerType.SERVICE_WORKER_CLIENT,\n      target,\n      receiverEventPreprocessor,\n      senderEventPreprocessor,\n    );\n  }\n\n  start() {\n    this.target.start();\n  }\n\n  close() {\n    this.target.close();\n  }\n}\n\nexport default ServiceClientDispatcher;\n","/* eslint-disable no-restricted-globals */\nimport { createEventDispatcher } from '@actualwave/event-dispatcher';\nimport { parseMessagePortEvent } from '@actualwave/messageport-dispatcher';\nimport WorkerType from '../WorkerType';\nimport WorkerEvent, {\n  NativeEventType,\n  dispatchWorkerErrorEvent,\n} from '../WorkerEvent';\nimport ServiceClientDispatcher from './ClientDispatcher';\n\n/**\n * Read-only interface, mainly will listen to \"connect\" event.\n * You should listen to WorkerEvent.CONNECT to intercept client\n * instance to be able to communicate.\n * @param worker\n * @param receiverEventPreprocessor {?Function}\n * @constructor\n */\nclass ServiceServerDispatcher {\n  constructor(\n    target = self,\n    receiverEventPreprocessor,\n    clientReceiverEventPreprocessor,\n    clientSenderEventPreprocessor,\n  ) {\n    this.type = WorkerType.SERVICE_WORKER_SERVER;\n    this.target = target;\n\n    this.clientFactory = (port) => {\n      if (!port) {\n        return null;\n      }\n\n      return new ServiceClientDispatcher(\n        port,\n        clientReceiverEventPreprocessor,\n        clientSenderEventPreprocessor,\n      );\n    };\n\n    this.receiver = createEventDispatcher(receiverEventPreprocessor);\n\n    dispatchWorkerErrorEvent(target, this.receiver);\n    target.addEventListener(NativeEventType.MESSAGE, (event) => this._postMessageListener(event),\n    );\n  }\n\n  addEventListener = (...args) => this.receiver.addEventListener(...args);\n\n  hasEventListener = (...args) => this.receiver.hasEventListener(...args);\n\n  removeEventListener = (...args) => this.receiver.removeEventListener(...args);\n\n  removeAllEventListeners = (...args) => this.receiver.removeAllEventListeners(...args);\n\n  /**\n   * @private\n   */\n  _postMessageListener(nativeEvent) {\n    const {\n      data: rawMessage,\n      ports: [client],\n    } = nativeEvent;\n\n    if (!rawMessage) {\n      return;\n    }\n\n    const {\n      event: { type: eventType, data: eventData },\n    } = parseMessagePortEvent(rawMessage);\n\n    const event = new WorkerEvent(\n      eventType,\n      eventData,\n      nativeEvent,\n      this.clientFactory(client),\n    );\n\n    this.receiver.dispatchEvent(event);\n  }\n}\n\nexport default ServiceServerDispatcher;\n","/* eslint-disable no-restricted-globals */\nimport WorkerType from '../WorkerType';\nimport DedicatedWorkerDispatcher from '../DedicatedWorkerDispatcher';\nimport SharedWorkerDispatcher from '../SharedWorkerDispatcher';\nimport SharedClientDispatcher from '../sharedWorker/ClientDispatcher';\nimport SharedServerDispatcher from '../sharedWorker/ServerDispatcher';\nimport ServiceWorkerDispatcher from '../ServiceWorkerDispatcher';\nimport ServiceClientDispatcher from '../serviceWorker/ClientDispatcher';\nimport ServiceServerDispatcher from '../serviceWorker/ServerDispatcher';\n\nexport const createForDedicatedWorker = (\n  target,\n  receiverEventPreprocessor,\n  senderEventPreprocessor,\n) => new DedicatedWorkerDispatcher(\n  target,\n  receiverEventPreprocessor,\n  senderEventPreprocessor,\n);\n\nexport const createForSharedWorker = (\n  target,\n  receiverEventPreprocessor,\n  senderEventPreprocessor,\n) => new SharedWorkerDispatcher(\n  target,\n  null,\n  receiverEventPreprocessor,\n  senderEventPreprocessor,\n);\n\nexport const createForServiceWorker = (\n  receiverEventPreprocessor,\n  senderEventPreprocessor,\n) => new ServiceWorkerDispatcher(\n  receiverEventPreprocessor,\n  senderEventPreprocessor,\n);\n\n/**\n *\n * @param worker {String|Worker|SharedWorker|MessagePort}\n * @param type {String}\n * @param receiverEventPreprocessor {?Function}\n * @param senderEventPreprocessor {?Function}\n * @returns {AbstractDispatcher}\n */\nexport const create = (\n  target,\n  type,\n  receiverEventPreprocessor,\n  senderEventPreprocessor,\n) => {\n  switch (type) {\n    default:\n    case WorkerType.DEDICATED_WORKER:\n      return createForDedicatedWorker(\n        target,\n        receiverEventPreprocessor,\n        senderEventPreprocessor,\n      );\n    case WorkerType.SHARED_WORKER:\n      return createForSharedWorker(\n        target,\n        receiverEventPreprocessor,\n        senderEventPreprocessor,\n      );\n    case WorkerType.SHARED_WORKER_SERVER:\n      return new SharedServerDispatcher(target, receiverEventPreprocessor);\n    case WorkerType.SHARED_WORKER_CLIENT:\n      return new SharedClientDispatcher(\n        target,\n        receiverEventPreprocessor,\n        senderEventPreprocessor,\n      );\n    case WorkerType.SERVICE_WORKER:\n      return createForServiceWorker(\n        receiverEventPreprocessor,\n        senderEventPreprocessor,\n      );\n    case WorkerType.SERVICE_WORKER_SERVER:\n      return new ServiceServerDispatcher(target, receiverEventPreprocessor);\n    case WorkerType.SERVICE_WORKER_CLIENT:\n      return new ServiceClientDispatcher(\n        target,\n        receiverEventPreprocessor,\n        senderEventPreprocessor,\n      );\n  }\n};\n\n/**\n *\n * @param receiverEventPreprocessor {?Function}\n * @param senderEventPreprocessor {?Function}\n * @returns {AbstractDispatcher}\n */\nexport const createForSelf = (\n  receiverEventPreprocessor,\n  senderEventPreprocessor,\n) => {\n  // Only dedicated WebWorker has postMessage since they have single client\n  if (typeof self.postMessage === 'function') {\n    return new DedicatedWorkerDispatcher(\n      self,\n      receiverEventPreprocessor,\n      senderEventPreprocessor,\n    );\n  }\n\n  // Only ServiceWorker has registration object\n  if (self.registration && typeof self.registration.scope === 'string') {\n    return new ServiceServerDispatcher(self, receiverEventPreprocessor);\n  }\n\n  return new SharedServerDispatcher(self, receiverEventPreprocessor);\n};\n","import WorkerType from './WorkerType';\nimport WorkerEvent, { NativeEventType } from './WorkerEvent';\nimport DedicatedWorkerDispatcher from './DedicatedWorkerDispatcher';\nimport SharedWorkerDispatcher from './SharedWorkerDispatcher';\nimport SharedClientDispatcher from './sharedWorker/ClientDispatcher';\nimport SharedServerDispatcher from './sharedWorker/ServerDispatcher';\nimport ServiceWorkerDispatcher from './ServiceWorkerDispatcher';\nimport ServiceClientDispatcher from './serviceWorker/ClientDispatcher';\nimport ServiceServerDispatcher from './serviceWorker/ServerDispatcher';\nimport {\n  create,\n  createForSelf,\n  createForDedicatedWorker,\n  createForSharedWorker,\n  createForServiceWorker,\n} from './utils/create';\n\nconst CONNECT_EVENT = WorkerEvent.CONNECT;\nconst { DEDICATED_WORKER, SHARED_WORKER, SERVICE_WORKER } = WorkerType;\n\nexport default DedicatedWorkerDispatcher;\n\nexport {\n  create,\n  createForSelf,\n  createForDedicatedWorker,\n  createForSharedWorker,\n  createForServiceWorker,\n  CONNECT_EVENT,\n  DEDICATED_WORKER,\n  SHARED_WORKER,\n  SERVICE_WORKER,\n  WorkerEvent,\n  WorkerType,\n  NativeEventType,\n  SharedClientDispatcher,\n  SharedServerDispatcher,\n  SharedWorkerDispatcher,\n  ServiceWorkerDispatcher,\n  ServiceClientDispatcher,\n  ServiceServerDispatcher,\n  DedicatedWorkerDispatcher,\n};\n"],"names":["WorkerType","DEDICATED_WORKER","SHARED_WORKER","SHARED_WORKER_SERVER","SHARED_WORKER_CLIENT","SERVICE_WORKER","SERVICE_WORKER_SERVER","SERVICE_WORKER_CLIENT","require$$0","NativeEventType","CONNECT","MESSAGE","ERROR","MESSAGEERROR","LANGUAGECHANGE","ONLINE","OFFLINE","INSTALL","ACTIVATE","FETCH","SYNC","PUSH","WorkerEvent","Event","constructor","type","data","nativeEvent","client","getWorkerEventType","dispatchWorkerEvent","source","target","eventType","handler","event","hasEventListener","dispatchEvent","addEventListener","dispatchWorkerEvents","dispatchWorkerErrorEvent","AbstractDispatcher","MessagePortDispatcher","receiverEventPreprocessor","senderEventPreprocessor","targetOrigin","transferList","postMessage","getTarget","worker","self","isObject","Worker","String","DedicatedWorkerDispatcher","receiver","terminate","name","SharedWorker","SharedWorkerDispatcher","port","start","close","SharedClientDispatcher","SharedServerDispatcher","clientReceiverEventPreprocessor","clientSenderEventPreprocessor","clientFactory","createEventDispatcher","handleConnect","args","removeEventListener","removeAllEventListeners","ports","getServiceWorker","navigator","serviceWorker","ready","registration","getRegistration","active","createTarget","channel","MessageChannel","neutered","message","port2","onmessage","port1","ServiceWorkerDispatcher","onReady","then","ServiceClientDispatcher","ServiceServerDispatcher","_postMessageListener","rawMessage","eventData","parseMessagePortEvent","createForDedicatedWorker","createForSharedWorker","createForServiceWorker","create","createForSelf","scope","CONNECT_EVENT"],"mappings":"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"}